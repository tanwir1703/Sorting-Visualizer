{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","counterArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getQuickSortAnimations","animation","quickSortHelper","start","end","pivot","left","right","temp","getHeapSortAnimations","n","heapify","HeapSortHelper","largest","l","r","swap","SortingVisualizer","props","handleChange","bind","state","this","resetArray","document","getElementById","disabled","randomNumbersBetween","value","setState","a","getElementsByClassName","style","width","backgroundColor","evt","x","parseInt","target","y","round","background","SPEED","c","sum","arrayBars","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","setTimeout","barIdx","newHeight","height","tempheight","BubbleSortHelper","getBubbleSortAnimations","className","map","idx","key","id","type","min","max","color","onChange","handleSpeed","onClick","mergeSort","quickSort","heapSort","bubbleSort","React","Component","random","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.899f03bb.chunk.js","sourcesContent":["\r\n//Merge Sort Operations:\r\n\r\nexport function getMergeSortAnimations(array) {\r\n\r\n    const animations = [];\r\n    if(array.length <= 1)\r\n    return array;\r\n    const counterArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, counterArray, animations);\r\n    return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    counterArray,\r\n    animations,\r\n) {\r\n\r\n    if(startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(counterArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(counterArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, counterArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    counterArray,\r\n    animations,\r\n) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n\r\n    while(i <= middleIdx && j <= endIdx)\r\n    {\r\n\r\n        animations.push([i,j]);\r\n\r\n        animations.push([i,j]);\r\n        if(counterArray[i] <= counterArray[j]){\r\n        \r\n            animations.push([k, counterArray[i]]);\r\n            mainArray[k++] = counterArray[i++];\r\n        }\r\n        else{\r\n\r\n            animations.push([k, counterArray[j]]);\r\n            mainArray[k++] = counterArray[j++];\r\n        }\r\n    }\r\n\r\n    while(i <= middleIdx){\r\n    animations.push([i,i]);\r\n    animations.push([i,i]);\r\n    animations.push([k, counterArray[i] ]);    \r\n    mainArray[k++] = counterArray[i++];\r\n    }\r\n    while(j <= endIdx){\r\n    animations.push([j,j]);\r\n    animations.push([j,j]);\r\n    animations.push([k, counterArray[j] ]); \r\n    mainArray[k++] = counterArray[j++];\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//Quick Sort Operations:\r\nexport function getQuickSortAnimations(array) {\r\n\r\n    const animation = [];\r\n    if(array.length <= 1)\r\n    return array;\r\n    const counterArray = array.slice();\r\n    quickSortHelper(array, 0, array.length - 1, animation);\r\n    return animation;\r\n}\r\n\r\nfunction quickSortHelper(\r\n    array,\r\n    start,\r\n    end,\r\n    animation,\r\n) { if (start >= end) {\r\n    return;\r\n  }\r\n  let pivot = start,\r\n      left = start + 1,\r\n      right = end;\r\n  while (right >= left) {\r\n    if (array[right] < array[pivot] && array[left] > array[pivot]) {\r\n      animation.push([left, right]);\r\n      animation.push([left, right]);\r\n      animation.push([left, right]);\r\n      let temp = array[right];\r\n      array[right] = array[left];\r\n      array[left] = temp;\r\n    }\r\n    if (array[right] >= array[pivot]) {\r\n      right--;\r\n    }\r\n    if (array[left] <= array[pivot]) {\r\n      left++;\r\n    }\r\n  }\r\n  if (pivot !== right) {\r\n    let temp = array[right];\r\n    array[right] = array[pivot];\r\n    array[pivot] = temp;\r\n    animation.push([pivot, right]);\r\n    animation.push([pivot, right]);\r\n    animation.push([pivot, right]);\r\n  }\r\n  quickSortHelper(array, start, right - 1, animation);\r\n  quickSortHelper(array, right + 1, end, animation);\r\n}\r\n\r\n\r\n//Bubble Sort Operations:\r\nexport function getBubbleSortAnimations(array) {\r\n\r\n    const animation = [];\r\n    if(array.length <= 1)\r\n    return array;\r\n    const counterArray = array.slice();\r\n    BubbleSortHelper(array, animation);\r\n    return animation;\r\n}\r\n\r\nfunction BubbleSortHelper(\r\n    array,\r\n    animation\r\n){\r\n    let n = array.length;\r\n    for(let i=0; i<n-1; i++)\r\n    {\r\n        for(let j=0; j<n-i-1; j++)\r\n        {\r\n            if(array[j]>array[j+1])\r\n            {\r\n                let temp = array[j];\r\n                array[j] = array[j+1];\r\n                array[j+1] = temp;\r\n                animation.push([j, j+1]);\r\n                animation.push([j, j+1]);\r\n                animation.push([j, j+1]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function Completed(\r\n    array\r\n) {\r\n    for(let i=0; i<array.length-1; i++)\r\n    {\r\n        for(let j=0; j<array.length - i -1; j++)\r\n        {\r\n            if(array[j]>array[j+1])\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nexport function getHeapSortAnimations(array) {\r\n\r\n    const animation = [];\r\n    HeapSortHelper(array, animation);\r\n    return animation;\r\n}\r\nfunction HeapSortHelper(\r\n    array,\r\n    animation\r\n) \r\n    { \r\n        let n = array.length; \r\n  \r\n        // Build heap (rearrange array) \r\n        for (let i = n / 2 - 1; i >= 0; i--) \r\n            heapify(array, n, i, animation); \r\n  \r\n        // One by one extract an element from heap \r\n        for (let i=n-1; i>0; i--) \r\n        { \r\n            // Move current root to end \r\n            let temp = array[0]; \r\n            array[0] = array[i]; \r\n            array[i] = temp; \r\n            animation.push([0, i]);\r\n            animation.push([0, i]);\r\n            animation.push([0, i]);\r\n  \r\n            // call max heapify on the reduced heap \r\n            heapify(array, i, 0, animation); \r\n        } \r\n    } \r\n    function heapify(array, n, i, animation) \r\n    { \r\n        let largest = i; // Initialize largest as root \r\n        let l = 2*i + 1; // left = 2*i + 1 \r\n        let r = 2*i + 2; // right = 2*i + 2 \r\n  \r\n        // If left child is larger than root \r\n        if (l < n && array[l] > array[largest]) \r\n            largest = l; \r\n  \r\n        // If right child is larger than largest so far \r\n        if (r < n && array[r] > array[largest]) \r\n            largest = r; \r\n  \r\n        // If largest is not root \r\n        if (largest != i) \r\n        { \r\n            let swap = array[i]; \r\n            array[i] = array[largest]; \r\n            array[largest] = swap; \r\n            animation.push([i, largest]);\r\n            animation.push([i, largest]);\r\n            animation.push([i, largest]);\r\n            // Recursively heapify the affected sub-tree \r\n            heapify(array, n, largest, animation); \r\n        } \r\n    } ","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport { getMergeSortAnimations } from '../sortingAlgorithms/sortingAlgorithms.js';\r\nimport { getQuickSortAnimations } from '../sortingAlgorithms/sortingAlgorithms.js';\r\nimport { getBubbleSortAnimations } from '../sortingAlgorithms/sortingAlgorithms.js';\r\nimport { getHeapSortAnimations } from '../sortingAlgorithms/sortingAlgorithms.js';\r\nimport { Completed } from '../sortingAlgorithms/sortingAlgorithms.js';\r\n\r\nconst NumberOfBars = 100;\r\n\r\nconst ANIMATION_SPEED = 5;\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = 'turquoise';\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            array: [], \r\n        };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\ncomponentDidMount() { \r\n    this.resetArray();\r\n}\r\n\r\nresetArray() {\r\n    document.getElementById(\"changeSize\").disabled = false;\r\n    document.getElementById(\"reset\").disabled = false;\r\n    const array = [];\r\n    for(let i=0; i<50; i++)\r\n    {\r\n        array.push(randomNumbersBetween(5, 730));\r\n    }\r\n    document.getElementById(\"changeSpeed\").value = 100;\r\n    document.getElementById(\"changeSize\").value = 50;\r\n    this.setState({array});\r\n    let a = document.getElementsByClassName(\"array-bar\");\r\n    for(let i=0; i<a.length ; i++)\r\n    {\r\n        a[i].style.width = \"8px\";\r\n        a[i].style.backgroundColor = PRIMARY_COLOR;\r\n    }\r\n}\r\n\r\nhandleChange(evt) {\r\n    const array = [];\r\n    let x = parseInt(evt.target.value);\r\n    let y = Math.round(200 / x);\r\n    for(let i=0; i<x; i++)\r\n    {\r\n        array.push(randomNumbersBetween(5, 730));\r\n        \r\n    }\r\n    this.setState({array});\r\n    let a = document.getElementsByClassName(\"array-bar\");\r\n    for(let i=0; i< a.length; i++)\r\n    {\r\n        a[i].style.width = `${y}px`;\r\n    }\r\n    this.setState({array});\r\n}\r\n\r\n mergeSort() {\r\n    document.getElementById(\"changeSize\").disabled = true;\r\n    document.getElementById(\"reset\").disabled = true;\r\n    document.getElementById(\"reset\").style.background = \"red\" ;\r\n    const SPEED = 1000 / document.getElementById(\"changeSpeed\").value ;\r\n    const animations = getMergeSortAnimations(this.state.array);\r\n    let c = 0; \r\n    let sum = 0;\r\n    for(let i=0; i < animations.length; i++)\r\n    {\r\n        \r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n        if(i % 3 === 0)\r\n        {\r\n            sum = sum + i*SPEED;\r\n           const [barOneIdx, barTwoIdx] = animations[i];\r\n           const barOneStyle = arrayBars[barOneIdx].style;\r\n           const barTwoStyle = arrayBars[barTwoIdx].style;\r\n           setTimeout(() => {\r\n            \r\n            barOneStyle.backgroundColor = \"red\";\r\n            barTwoStyle.backgroundColor = \"purple\";\r\n\r\n           }, i*SPEED);\r\n        } \r\n        else if(i % 3 ===1)\r\n        {\r\n            sum = sum + i*SPEED;\r\n            const [barOneIdx, barTwoIdx] = animations[i];\r\n           const barOneStyle = arrayBars[barOneIdx].style;\r\n           const barTwoStyle = arrayBars[barTwoIdx].style;\r\n           setTimeout(() => {\r\n            \r\n            barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n            barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n\r\n           }, i*SPEED);\r\n        }\r\n        else{\r\n            sum = sum + i*SPEED;\r\n            setTimeout(() => {\r\n                const [barIdx, newHeight] = animations[i];\r\n                const barStyle = arrayBars[barIdx].style;\r\n                barStyle.height = `${newHeight / 1.1}px` ;\r\n\r\n            }, i*SPEED);\r\n        \r\n        }\r\n    c++;\r\n    }\r\n    if(c === animations.length)\r\n    {\r\n        setTimeout(() => {\r\n       \r\n         document.getElementById(\"reset\").disabled = false;   \r\n         document.getElementById(\"reset\").style.background = \"#03a9f4\" ;\r\n\r\n         const a = document.getElementsByClassName(\"array-bar\");\r\n        for(let i=0;i< a.length; i++)\r\n       {\r\n         \r\n        a[i].style.backgroundColor = \"#03f43f\";\r\n        \r\n        setTimeout(() =>{\r\n            a[i].style.backgroundColor = PRIMARY_COLOR;\r\n        }, 500);\r\n        }\r\n      \r\n        }, sum *(2/animations.length) );\r\n        \r\n        \r\n    }\r\n\r\n\r\n  }\r\n\r\n  quickSort() {\r\n      \r\n    document.getElementById(\"changeSize\").disabled = true;\r\n    document.getElementById(\"reset\").disabled = true;\r\n    document.getElementById(\"reset\").style.background = \"red\" ;\r\n    const SPEED = 1000 / document.getElementById(\"changeSpeed\").value ;\r\n    const animations = getQuickSortAnimations(this.state.array);\r\n    let c=0;\r\n    let sum=0;\r\n\r\n    \r\n    for(let i=0; i < animations.length; i++)\r\n    {\r\n        \r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n           const barOneStyle = arrayBars[barOneIdx].style;\r\n           const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        if(i % 3 === 0)\r\n        { \r\n            sum = sum + i*SPEED;\r\n           setTimeout(() => {\r\n            \r\n            barOneStyle.backgroundColor = \"red\";\r\n            barTwoStyle.backgroundColor = \"purple\";\r\n\r\n           }, i*SPEED);\r\n        } \r\n        else if(i % 3 ===1)\r\n        {\r\n            sum = sum + i*SPEED;\r\n            setTimeout(() => {\r\n\r\n                barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n                barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n            }, i*SPEED);\r\n        }\r\n        else{\r\n            sum = sum + i*SPEED;\r\n            setTimeout(() => {\r\n\r\n                const tempheight = barOneStyle.height;\r\n                barOneStyle.height = barTwoStyle.height;\r\n                barTwoStyle.height = tempheight;\r\n\r\n            }, i*SPEED);\r\n        }\r\n       \r\n        c++;\r\n\r\n    }\r\n    if(c === animations.length)\r\n    {\r\n        setTimeout(() => {\r\n       \r\n         document.getElementById(\"reset\").disabled = false;   \r\n         document.getElementById(\"reset\").style.background = \"#03a9f4\" ;\r\n\r\n         const a = document.getElementsByClassName(\"array-bar\");\r\n        for(let i=0;i< a.length; i++)\r\n       {\r\n         \r\n        a[i].style.backgroundColor = \"#03f43f\";\r\n        \r\n        setTimeout(() =>{\r\n            a[i].style.backgroundColor = PRIMARY_COLOR;\r\n        }, 500);\r\n        }\r\n      \r\n        }, sum *(2/animations.length) );\r\n        \r\n        \r\n    }\r\n  }\r\n \r\n  heapSort() {\r\n    document.getElementById(\"changeSize\").disabled = true;\r\n    document.getElementById(\"reset\").disabled = true;\r\n    document.getElementById(\"reset\").style.background = \"red\" ;\r\n    document.getElementById(\"changeSize\").disabled = true;\r\n    const SPEED = 1000 / document.getElementById(\"changeSpeed\").value ; \r\n    const animations = getHeapSortAnimations(this.state.array);\r\n\r\n    let sum= 0;\r\n    let c=0;\r\n\r\n    for(let i=0; i < animations.length; i++)\r\n    {\r\n        \r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n           const barOneStyle = arrayBars[barOneIdx].style;\r\n           const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        if(i % 3 === 0)\r\n        { \r\n            sum = sum + i*SPEED;\r\n           setTimeout(() => {\r\n            \r\n            barOneStyle.backgroundColor = \"red\";\r\n            barTwoStyle.backgroundColor = \"purple\";\r\n\r\n           }, i*SPEED);\r\n        } \r\n        else if(i % 3 ===1)\r\n        {\r\n            sum = sum + i*SPEED;\r\n            setTimeout(() => {\r\n\r\n                barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n                barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n            }, i*SPEED);\r\n        }\r\n        else{\r\n            sum = sum + i*SPEED;\r\n            setTimeout(() => {\r\n\r\n                const tempheight = barOneStyle.height;\r\n                barOneStyle.height = barTwoStyle.height;\r\n                barTwoStyle.height = tempheight;\r\n\r\n            }, i*SPEED);\r\n        }\r\n        \r\n\r\n        c++;\r\n    }\r\n    \r\n    if(c === animations.length)\r\n    {\r\n        setTimeout(() => {\r\n       \r\n         document.getElementById(\"reset\").disabled = false;   \r\n         document.getElementById(\"reset\").style.background = \"#03a9f4\" ;\r\n\r\n         const a = document.getElementsByClassName(\"array-bar\");\r\n        for(let i=0;i< a.length; i++)\r\n       {\r\n         \r\n        a[i].style.backgroundColor = \"#03f43f\";\r\n        \r\n        setTimeout(() =>{\r\n            a[i].style.backgroundColor = PRIMARY_COLOR;\r\n        }, 500);\r\n        }\r\n      \r\n        }, sum *(2/animations.length) );\r\n        \r\n        \r\n    }\r\n  }\r\n\r\n\r\n  bubbleSort() {\r\n    document.getElementById(\"changeSize\").disabled = true;\r\n    document.getElementById(\"reset\").disabled = true;\r\n    document.getElementById(\"reset\").style.background = \"red\" ;\r\n    document.getElementById(\"changeSize\").disabled = true;\r\n    const SPEED = 1000 / document.getElementById(\"changeSpeed\").value ; \r\n    const animations = getBubbleSortAnimations(this.state.array);\r\n\r\n    let sum= 0;\r\n    let c=0;\r\n\r\n    for(let i=0; i < animations.length; i++)\r\n    {\r\n        \r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n           const barOneStyle = arrayBars[barOneIdx].style;\r\n           const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        if(i % 3 === 0)\r\n        { \r\n            sum = sum + i*SPEED;\r\n           setTimeout(() => {\r\n            \r\n            barOneStyle.backgroundColor = \"red\";\r\n            barTwoStyle.backgroundColor = \"purple\";\r\n\r\n           }, i*SPEED);\r\n        } \r\n        else if(i % 3 ===1)\r\n        {\r\n            sum = sum + i*SPEED;\r\n            setTimeout(() => {\r\n\r\n                barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n                barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n            }, i*SPEED);\r\n        }\r\n        else{\r\n            sum = sum + i*SPEED;\r\n            setTimeout(() => {\r\n\r\n                const tempheight = barOneStyle.height;\r\n                barOneStyle.height = barTwoStyle.height;\r\n                barTwoStyle.height = tempheight;\r\n\r\n            }, i*SPEED);\r\n        }\r\n        \r\n\r\n        c++;\r\n    }\r\n    \r\n    if(c === animations.length)\r\n    {\r\n        setTimeout(() => {\r\n       \r\n         document.getElementById(\"reset\").disabled = false;   \r\n         document.getElementById(\"reset\").style.background = \"#03a9f4\" ;\r\n\r\n         const a = document.getElementsByClassName(\"array-bar\");\r\n        for(let i=0;i< a.length; i++)\r\n       {\r\n         \r\n        a[i].style.backgroundColor = \"#03f43f\";\r\n        \r\n        setTimeout(() =>{\r\n            a[i].style.backgroundColor = PRIMARY_COLOR;\r\n        }, 500);\r\n        }\r\n      \r\n        }, sum *(2/animations.length) );\r\n        \r\n        \r\n    }\r\n  }\r\n\r\n  render() {\r\n      const {array} = this.state;\r\n      \r\n      return (\r\n\r\n        <div className=\"array-container\">\r\n            <br></br>\r\n          {array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{\r\n                backgroundColor: PRIMARY_COLOR,\r\n                height: `${value / 1.1}px`,\r\n                width: `${400 / array.length}px`,\r\n              }}></div>\r\n              \r\n          ))}\r\n        <br></br>\r\n        <br></br>\r\n        <div className=\"toolbar\">\r\n        <input\r\n          id=\"changeSpeed\"\r\n          type=\"range\"\r\n          min=\"5\"\r\n          max=\"200\"\r\n          style={{background: \"blue\", color: \"blue\"}}\r\n          onChange={this.handleSpeed}\r\n          />\r\n        <input\r\n          id=\"changeSize\"\r\n          type=\"range\"\r\n          min=\"5\"\r\n          max=\"100\"\r\n          style={{background: \"blue\", color: \"blue\"}}\r\n          onChange={this.handleChange}\r\n          />\r\n          <button id=\"reset\" onClick={() => this.resetArray()}>Generate New Array</button>\r\n          <button onClick={() => this.mergeSort()}>Merge Sort</button>\r\n          <button onClick={() => this.quickSort()}>Quick Sort</button>\r\n          <button onClick={() => this.heapSort()}>Heap Sort</button>\r\n          <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\nfunction randomNumbersBetween(min,max){\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}